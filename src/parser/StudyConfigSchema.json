{
  "$ref": "#/definitions/StudyConfig",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Answer": {
      "additionalProperties": false,
      "description": "The Answer interface is used to define the properties of an answer. Answers are used to define the correct answer for a task. These are generally used in training tasks.",
      "properties": {
        "acceptableHigh": {
          "type": "number"
        },
        "acceptableLow": {
          "type": "number"
        },
        "answer": {},
        "answerCallback": {
          "type": "string"
        },
        "answerRegex": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "answer"
      ],
      "type": "object"
    },
    "CheckboxResponse": {
      "additionalProperties": false,
      "description": "The CheckboxResponse interface is used to define the properties of a checkbox response. CheckboxResponses render as a checkbox input with user specified options.",
      "properties": {
        "correctAnswer": {},
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/Option"
          },
          "type": "array"
        },
        "paramCapture": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "type": {
          "const": "checkbox",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "options",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "DropdownResponse": {
      "additionalProperties": false,
      "description": "The DropdownResponse interface is used to define the properties of a dropdown response. DropdownResponses render as a select input with user specified options.",
      "properties": {
        "correctAnswer": {},
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/Option"
          },
          "type": "array"
        },
        "paramCapture": {
          "type": "string"
        },
        "placeholder": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "type": {
          "const": "dropdown",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "options",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "IFrameResponse": {
      "additionalProperties": false,
      "description": "The IFrameResponse interface is used to define the properties of an iframe response. IFrameResponses render as a list, that is connected to a WebsiteComponent. When data is sent from the WebsiteComponent, it is displayed in the list.",
      "properties": {
        "correctAnswer": {},
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "paramCapture": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "type": {
          "const": "iframe",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "ImageComponent": {
      "additionalProperties": false,
      "description": "The ImageComponent interface is used to define the properties of an image component. This component is used to render an image with optional styling.",
      "properties": {
        "correctAnswer": {
          "items": {
            "$ref": "#/definitions/Answer"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "instruction": {
          "type": "string"
        },
        "instructionLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "meta": {
          "additionalProperties": {},
          "type": "object"
        },
        "nextButtonLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "nextButtonText": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "response": {
          "items": {
            "$ref": "#/definitions/Response"
          },
          "type": "array"
        },
        "style": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "const": "image",
          "type": "string"
        }
      },
      "required": [
        "path",
        "response",
        "type"
      ],
      "type": "object"
    },
    "IndividualComponent": {
      "anyOf": [
        {
          "$ref": "#/definitions/MarkdownComponent"
        },
        {
          "$ref": "#/definitions/ReactComponent"
        },
        {
          "$ref": "#/definitions/ImageComponent"
        },
        {
          "$ref": "#/definitions/WebsiteComponent"
        },
        {
          "$ref": "#/definitions/QuestionnaireComponent"
        }
      ]
    },
    "InheritedComponent": {
      "anyOf": [
        {
          "$ref": "#/definitions/IndividualComponent"
        },
        {
          "$ref": "#/definitions/PartialComponent"
        }
      ]
    },
    "LikertResponse": {
      "additionalProperties": false,
      "description": "The LikertResponse interface is used to define the properties of a likert response. LikertResponses render as radio buttons with a user specified number of options, which can be controlled through the preset. For example, preset: 5 will render 5 radio buttons, and preset: 7 will render 7 radio buttons. LikertResponses can also have a description, and left and right labels. The left and right labels are used to label the left and right ends of the likert scale with values such as 'Strongly Disagree' and 'Strongly Agree'.",
      "properties": {
        "correctAnswer": {},
        "desc": {
          "type": "string"
        },
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "leftLabel": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "paramCapture": {
          "type": "string"
        },
        "preset": {
          "type": "number"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "rightLabel": {
          "type": "string"
        },
        "type": {
          "const": "likert",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "preset",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "LongTextResponse": {
      "additionalProperties": false,
      "description": "The LongTextResponse interface is used to define the properties of a long text response. LongTextResponses render as a text area that accepts any text and can optionally have a placeholder.",
      "properties": {
        "correctAnswer": {},
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "paramCapture": {
          "type": "string"
        },
        "placeholder": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "type": {
          "const": "longText",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "MarkdownComponent": {
      "additionalProperties": false,
      "description": "The MarkdownComponent interface is used to define the properties of a markdown component. The components can be used to render many different things, such as consent forms, instructions, and debriefs. Additionally, you can use the markdown component to render images, videos, and other media, with supporting text.",
      "properties": {
        "correctAnswer": {
          "items": {
            "$ref": "#/definitions/Answer"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "instruction": {
          "type": "string"
        },
        "instructionLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "meta": {
          "additionalProperties": {},
          "type": "object"
        },
        "nextButtonLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "nextButtonText": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "response": {
          "items": {
            "$ref": "#/definitions/Response"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "const": "markdown",
          "type": "string"
        }
      },
      "required": [
        "path",
        "response",
        "type"
      ],
      "type": "object"
    },
    "NumericalResponse": {
      "additionalProperties": false,
      "description": "The NumericalResponse interface is used to define the properties of a numerical response. NumericalResponses render as a text input that only accepts numbers, and can optionally have a min and max value, or a placeholder.",
      "properties": {
        "correctAnswer": {},
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "max": {
          "type": "number"
        },
        "min": {
          "type": "number"
        },
        "paramCapture": {
          "type": "string"
        },
        "placeholder": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "type": {
          "const": "numerical",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "Option": {
      "additionalProperties": false,
      "description": "The Option interface is used to define the options for a dropdown, slider, radio, or checkbox response. The label is the text that is displayed to the user, and the value is the value that is stored in the data file. The Option interface is used in the Response interface.",
      "properties": {
        "label": {
          "type": "string"
        },
        "value": {
          "type": [
            "string",
            "number"
          ]
        }
      },
      "required": [
        "label",
        "value"
      ],
      "type": "object"
    },
    "OrderObject": {
      "additionalProperties": false,
      "properties": {
        "components": {
          "items": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "$ref": "#/definitions/OrderObject"
              }
            ]
          },
          "type": "array"
        },
        "numSamples": {
          "type": "number"
        },
        "order": {
          "enum": [
            "random",
            "latinSquare",
            "fixed"
          ],
          "type": "string"
        }
      },
      "required": [
        "order",
        "components"
      ],
      "type": "object"
    },
    "PartialComponent": {
      "additionalProperties": false,
      "properties": {
        "baseComponent": {
          "type": "string"
        },
        "correctAnswer": {
          "items": {
            "$ref": "#/definitions/Answer"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "instruction": {
          "type": "string"
        },
        "instructionLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "meta": {
          "additionalProperties": {},
          "type": "object"
        },
        "nextButtonLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "nextButtonText": {
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {},
          "type": "object"
        },
        "path": {
          "type": "string"
        },
        "response": {
          "items": {
            "$ref": "#/definitions/Response"
          },
          "type": "array"
        },
        "style": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "enum": [
            "markdown",
            "react-component",
            "image",
            "website",
            "questionnaire"
          ],
          "type": "string"
        }
      },
      "required": [
        "baseComponent"
      ],
      "type": "object"
    },
    "QuestionnaireComponent": {
      "additionalProperties": false,
      "description": "The QuestionnaireComponent interface is used to define the properties of a questionnaire component. A QuestionnaireComponent is used to render questions with different response types. The response types are also defined with these documentation. The main use case of this component type is to ask participants questions, without using markdown, websites, images, etc.",
      "properties": {
        "correctAnswer": {
          "items": {
            "$ref": "#/definitions/Answer"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "instruction": {
          "type": "string"
        },
        "instructionLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "meta": {
          "additionalProperties": {},
          "type": "object"
        },
        "nextButtonLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "nextButtonText": {
          "type": "string"
        },
        "response": {
          "items": {
            "$ref": "#/definitions/Response"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "const": "questionnaire",
          "type": "string"
        }
      },
      "required": [
        "response",
        "type"
      ],
      "type": "object"
    },
    "RadioResponse": {
      "additionalProperties": false,
      "description": "The RadioResponse interface is used to define the properties of a radio response. RadioResponses render as a radio input with user specified options, and optionally left and right labels.",
      "properties": {
        "correctAnswer": {},
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "leftLabel": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/Option"
          },
          "type": "array"
        },
        "paramCapture": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "rightLabel": {
          "type": "string"
        },
        "type": {
          "const": "radio",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "options",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "ReactComponent": {
      "additionalProperties": false,
      "description": "The ReactComponent interface is used to define the properties of a react component. This component is used to render react code with certain parameters. These parameters can be used within your react code to render different things.",
      "properties": {
        "correctAnswer": {
          "items": {
            "$ref": "#/definitions/Answer"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "instruction": {
          "type": "string"
        },
        "instructionLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "meta": {
          "additionalProperties": {},
          "type": "object"
        },
        "nextButtonLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "nextButtonText": {
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {},
          "type": "object"
        },
        "path": {
          "type": "string"
        },
        "response": {
          "items": {
            "$ref": "#/definitions/Response"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "const": "react-component",
          "type": "string"
        }
      },
      "required": [
        "path",
        "response",
        "type"
      ],
      "type": "object"
    },
    "Response": {
      "anyOf": [
        {
          "$ref": "#/definitions/NumericalResponse"
        },
        {
          "$ref": "#/definitions/ShortTextResponse"
        },
        {
          "$ref": "#/definitions/LongTextResponse"
        },
        {
          "$ref": "#/definitions/LikertResponse"
        },
        {
          "$ref": "#/definitions/DropdownResponse"
        },
        {
          "$ref": "#/definitions/SliderResponse"
        },
        {
          "$ref": "#/definitions/RadioResponse"
        },
        {
          "$ref": "#/definitions/CheckboxResponse"
        },
        {
          "$ref": "#/definitions/IFrameResponse"
        }
      ]
    },
    "ResponseBlockLocation": {
      "enum": [
        "sidebar",
        "aboveStimulus",
        "belowStimulus"
      ],
      "type": "string"
    },
    "ShortTextResponse": {
      "additionalProperties": false,
      "description": "The ShortTextResponse interface is used to define the properties of a short text response. ShortTextResponses render as a text input that accepts any text and can optionally have a placeholder.",
      "properties": {
        "correctAnswer": {},
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "paramCapture": {
          "type": "string"
        },
        "placeholder": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "type": {
          "const": "shortText",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "SliderResponse": {
      "additionalProperties": false,
      "description": "The SliderResponse interface is used to define the properties of a slider response. SliderResponses render as a slider input with user specified steps. For example, you could have steps of 0, 50, and 100.",
      "properties": {
        "correctAnswer": {},
        "hidden": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "options": {
          "items": {
            "$ref": "#/definitions/Option"
          },
          "type": "array"
        },
        "paramCapture": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        },
        "requiredLabel": {
          "type": "string"
        },
        "requiredValue": {},
        "type": {
          "const": "slider",
          "type": "string"
        }
      },
      "required": [
        "id",
        "location",
        "options",
        "prompt",
        "required",
        "type"
      ],
      "type": "object"
    },
    "StudyConfig": {
      "additionalProperties": false,
      "description": "The StudyConfig interface is used to define the properties of a study configuration. These are the hjson files that live in the public folder. In our repo, one example of this would be public/cleveland/config-cleveland.hjson.",
      "properties": {
        "$schema": {
          "type": "string"
        },
        "baseComponents": {
          "additionalProperties": {
            "$ref": "#/definitions/IndividualComponent"
          },
          "type": "object"
        },
        "components": {
          "additionalProperties": {
            "$ref": "#/definitions/InheritedComponent"
          },
          "type": "object"
        },
        "recordStudyAudio": {
          "type": "boolean"
        },
        "sequence": {
          "$ref": "#/definitions/OrderObject"
        },
        "studyMetadata": {
          "$ref": "#/definitions/StudyMetadata"
        },
        "uiConfig": {
          "$ref": "#/definitions/UIConfig"
        }
      },
      "required": [
        "$schema",
        "studyMetadata",
        "uiConfig",
        "components",
        "sequence"
      ],
      "type": "object"
    },
    "StudyMetadata": {
      "additionalProperties": false,
      "description": "The StudyMetadata is used to describe certain properties of a study. Some of this data is displayed on the landing page when running the app, such as the title and description. This data is also included in the data file that is downloaded at the end of the study, to help identify the study and version.",
      "properties": {
        "authors": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "date": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "organizations": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "title": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "title",
        "version",
        "authors",
        "date",
        "description",
        "organizations"
      ],
      "type": "object"
    },
    "UIConfig": {
      "additionalProperties": false,
      "description": "The UIConfig is used to configure the UI of the app. This includes the logo, contact email, and whether to show a progress bar. The UIConfig is also used to configure the sidebar, which can be used to display the task instructions and capture responses.",
      "properties": {
        "autoDownloadStudy": {
          "type": "boolean"
        },
        "autoDownloadTime": {
          "type": "number"
        },
        "contactEmail": {
          "type": "string"
        },
        "helpTextPath": {
          "type": "string"
        },
        "logoPath": {
          "type": "string"
        },
        "sidebar": {
          "type": "boolean"
        },
        "studyEndMsg": {
          "type": "string"
        },
        "withProgressBar": {
          "type": "boolean"
        }
      },
      "required": [
        "contactEmail",
        "logoPath",
        "withProgressBar",
        "sidebar"
      ],
      "type": "object"
    },
    "WebsiteComponent": {
      "additionalProperties": false,
      "description": "The WebsiteComponent interface is used to define the properties of a website component. A WebsiteComponent is used to render an iframe with a website inside of it. This can be used to display an external website or an html file that is located in the public folder.",
      "properties": {
        "correctAnswer": {
          "items": {
            "$ref": "#/definitions/Answer"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "instruction": {
          "type": "string"
        },
        "instructionLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "meta": {
          "additionalProperties": {},
          "type": "object"
        },
        "nextButtonLocation": {
          "$ref": "#/definitions/ResponseBlockLocation"
        },
        "nextButtonText": {
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {},
          "type": "object"
        },
        "path": {
          "type": "string"
        },
        "response": {
          "items": {
            "$ref": "#/definitions/Response"
          },
          "type": "array"
        },
        "style": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "const": "website",
          "type": "string"
        }
      },
      "required": [
        "path",
        "response",
        "type"
      ],
      "type": "object"
    }
  }
}